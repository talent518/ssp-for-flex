<?xml version="1.0" encoding="utf-8"?>
<component:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
				  xmlns:s="library://ns.adobe.com/flex/spark"
				  xmlns:mx="library://ns.adobe.com/flex/mx"
				  xmlns:component="com.fenxihui.library.component.*"
				  width="338" height="222" cornerRadius="10" creationComplete="initWindow(event)"
				  defaultButton="{btnLogin}" dropShadowVisible="true" horizontalScrollPolicy="off"
				  maxButtonVisible="false" paddingBottom="15" paddingLeft="15" paddingRight="15"
				  paddingTop="15" resizable="false" title="登录到全能股市操盘系统控制台" verticalGap="10"
				  verticalScrollPolicy="off">
	<fx:Script>
		<![CDATA[
			import com.fenxihui.console.model.User;
			import com.fenxihui.console.utils.Params;
			
			import mx.controls.Alert;
			import mx.core.windowClasses.TitleBar;
			import mx.events.FlexEvent;
			import mx.graphics.BitmapFill;
			
			private static var _loginWindow:LoginWindow=null;
			public static function get loginWindow():LoginWindow{
				if(!_loginWindow){
					_loginWindow=new LoginWindow;
				}
				return _loginWindow;
			}
			
			public static function remove():void{
				if(!_loginWindow || !_loginWindow.nativeWindow)
					return;
				UserAddWindow.remove();
				LostPasswdWindow.remove();
				_loginWindow.nativeWindow.close();
				_loginWindow.removeAllChildren();
				_loginWindow.removeAllElements();
				_loginWindow=null;
				System.gc();
			}
			
			protected function initWindow(e:*):void
			{
				addEventListener(Event.ACTIVATE,function(e:Event):void{
					iptUserName.setFocus();
				});
				nativeWindow.addEventListener(NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,function(e:NativeWindowDisplayStateEvent):void{
					if(e.afterDisplayState == NativeWindowDisplayState.MINIMIZED){
						e.preventDefault();
						nativeWindow.visible=false;
					}
				});
				addEventListener(Event.CLOSING,function(e:Event):void{
					e.preventDefault();
					nativeWindow.visible=false;
				});
				this.activate();
				try{
					chkAutoLogin.selected=NativeApplication.nativeApplication.startAtLogin;
				}catch(e:IllegalOperationError){
					trace('In debug mode, system user login automatically start [ read ] invalid!');
				}
				var user:Object=Params.user;
				if(user.username){
					iptUserName.text=user.username;
					iptUserName.setStyle('contentBackgroundAlpha',1);
				}
				if(user.password){
					iptPasswd.text=user.password;
					iptPasswd.setStyle('contentBackgroundAlpha',1);
				}
				if(Params.isRemember)
					chkRemember.selected=true;
				if(Params.autoLogin){
					chkAutoLogin.selected=true;
					chkRemember.selected=true;
				}
				Main.clearFlickerQueue();
			}
			
			protected function btnLogin_clickHandler(event:MouseEvent):void
			{
				if(iptUserName.text==''){
					Alert.show('用户名不能为空！','登录检查',Alert.OK,this);
					return;
				}
				if(iptPasswd.text==''){
					trace('密码不能为空！');
					Alert.show('密码不能为空！','登录检查',Alert.OK,this);
					return;
				}
				User.login(iptUserName.text,iptPasswd.text,chkRemember.selected,chkAutoLogin.selected);
			}
			
			protected function chkAutoLogin_changeHandler(event:Event):void
			{
				try{
					if(chkAutoLogin.selected)
						chkRemember.selected=true;
					NativeApplication.nativeApplication.startAtLogin=chkAutoLogin.selected;
				}catch(e:IllegalOperationError){
					trace('In debug mode, system user login automatically start [ write ] invalid!');
				}
			}
			
			protected function btnRegister_clickHandler(event:MouseEvent):void
			{
				with(UserAddWindow.userAddWindow){
					open(true); 
					nativeWindow.activate();
					nativeWindow.restore();
					nativeWindow.orderToFront();
					center();
				}
			}
			
			protected function btnLostPasswd_clickHandler(event:MouseEvent):void
			{
				with(LostPasswdWindow.lostPasswdWindow){
					open(true); 
					nativeWindow.activate();
					nativeWindow.restore();
					nativeWindow.orderToFront();
					center();
				}
			}
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="40">
		<s:Label height="100%" fontFamily="微软雅黑,黑体" fontSize="26" fontWeight="bold" text="用户名："
				 textAlign="right" verticalAlign="middle"/>
		<mx:TextInput id="iptUserName" x="63" y="400" width="100%" height="100%"
					  dropShadowVisible="false" focusEnabled="true" fontSize="22" paddingLeft="0"
					  paddingRight="0" paddingTop="5" tabIndex="1"/>
	</s:HGroup>
	<s:HGroup width="100%" height="40">
		<s:Label height="100%" fontFamily="微软雅黑,黑体" fontSize="26" fontWeight="bold" text="密　码："
				 textAlign="right" verticalAlign="middle"/>
		<mx:TextInput id="iptPasswd" x="289" y="400" width="100%" height="100%"
					  displayAsPassword="true" dropShadowVisible="false" focusEnabled="true"
					  fontSize="22" paddingLeft="0" paddingRight="0" paddingTop="5" tabIndex="2"/>
	</s:HGroup>
	<s:HGroup width="100%" height="40">
		<mx:CheckBox id="chkRemember" width="100%" height="100%" label="记住密码" buttonMode="true"
					 fontSize="14" tabIndex="3" textAlign="center" useHandCursor="true"/>
		<mx:CheckBox id="chkAutoLogin" width="100%" height="100%" label="自动登录" buttonMode="true"
					 change="chkAutoLogin_changeHandler(event)" fontSize="14" tabIndex="4"
					 textAlign="center" useHandCursor="true"/>
	</s:HGroup>
	<s:HGroup width="100%" height="40">
		<component:LabelBorder id="btnLogin" width="100%" height="100%" backgroundAlpha="1.0"
							   backgroundColor="#B60003" borderColor="#960003" buttonMode="true"
							   click="btnLogin_clickHandler(event)" color="#FFFFFF"
							   cornerRadius="10" fontFamily="微软雅黑" fontSize="26" fontWeight="bold"
							   text="登　录" textAlign="center" useHandCursor="true"
							   verticalAlign="middle"/>
		<component:LabelBorder id="btnLostPasswd" width="100%" height="100%" backgroundAlpha="1.0"
							   backgroundColor="#B60003" borderColor="#960003" buttonMode="true"
							   click="btnLostPasswd_clickHandler(event)" color="#FFFFFF"
							   cornerRadius="10" fontFamily="微软雅黑" fontSize="26" fontWeight="bold"
							   text="找回密码" textAlign="center" useHandCursor="true"
							   verticalAlign="middle"/>
	</s:HGroup>
</component:Window>
