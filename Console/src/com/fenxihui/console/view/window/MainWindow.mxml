<?xml version="1.0" encoding="utf-8"?>
<component:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
				  xmlns:s="library://ns.adobe.com/flex/spark"
				  xmlns:mx="library://ns.adobe.com/flex/mx"
				  xmlns:component="com.fenxihui.library.component.*"
				  xmlns:component4="com.fenxihui.console.view.component.*"
				  width="650" height="500" creationComplete="initWindow();" dropShadowVisible="true"
				  fontSize="12" horizontalScrollPolicy="off" layout="vertical"
				  paddingBottom="10" paddingLeft="10" paddingRight="10"
				  paddingTop="10" showStatusBar="false" showTitleBar="true" systemChrome="none"
				  verticalGap="10" verticalScrollPolicy="off" title="全能股市操盘系统控制台">
	<fx:Script>
		<![CDATA[
			import com.fenxihui.console.model.User;
			import com.fenxihui.console.utils.Params;
			import com.fenxihui.console.utils.RemoteProxy;
			import com.fenxihui.console.view.Loading;
			import com.fenxihui.console.view.component.FunctionButton;
			import com.fenxihui.console.view.component.ViewInfo;
			import com.fenxihui.console.view.item.ItemInfo;
			
			import flash.net.getClassByAlias;
			import flash.net.navigateToURL;
			
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.formatters.DateFormatter;
			import mx.utils.ObjectUtil;
			
			private static var _mainWindow:MainWindow;
			public static function get mainWindow():MainWindow{
				if(!_mainWindow){
					_mainWindow=new MainWindow;
				}
				return _mainWindow;
			}
			
			public static function remove():void{
				if(!_mainWindow){
					return;
				}
				var windows:Array=NativeApplication.nativeApplication.openedWindows;
				for(var i:uint=0;i<windows.length;i++){
					(windows[i] as NativeWindow).close();
				}
				_mainWindow=null;
				System.gc();
				Params.statusChangeEvent=null;
			}
			
			public function initWindow():void{
				nativeWindow.addEventListener(NativeWindowDisplayStateEvent.DISPLAY_STATE_CHANGING,function(e:NativeWindowDisplayStateEvent):void{
					if(e.afterDisplayState == NativeWindowDisplayState.MINIMIZED){
						e.preventDefault();
						nativeWindow.visible=false;
					}
				});
				addEventListener(Event.CLOSING,function(e:Event):void{
					e.preventDefault();
					nativeWindow.visible=false;
				});
				
				Main.setActiveAccount(Params.profile.nickname);
				Loading.hide(_mainWindow);
				Params.statusChangeEvent=function(status:int):void{
					if(status!=1){
						Main.setActiveAccount(Params.profile.nickname);
						Loading.show(_mainWindow,0x0,0.5);
					}
					trace('Status:'+(status?'Online':'Offline'));
				};
				RemoteProxy.bind('Remind.OS',function(request:XML):void{
					setFlicker('os',1);
				});
				RemoteProxy.bind('Remind.Gold',function(request:XML):void{
					setFlicker('gold',1);
				});
				RemoteProxy.bind('Remind.Invest',function(request:XML):void{
					setFlicker('invest',1);
				});
				RemoteProxy.bind('Remind.Consult',function(request:XML):void{
					setFlicker('consult',1);
				});
				flickers={
					//					os:{target:fbOS,icon:Icons.OS,title:'操作系统',number:0},
					//					gold:{target:fbGold,icon:Icons.Gold,title:'优选金股',number:0},
					//					invest:{target:fbInvest,icon:Icons.Invest,title:'投资组合',number:0},
					//					consult:{target:fbConsult,icon:Icons.Consult,title:'个股会诊',number:0}
				};
				while(_flickers.length){
					setFlicker.apply(null,_flickers.pop());
				}
			}
			
			private var flickers:Object;
			private var _flickers:Array=[];
			public static function setFlicker(type:String,number:int,isJoin:Boolean=true):void{
				if(!_mainWindow.flickers){
					_mainWindow._flickers.push([type,number,isJoin]);
					return;
				}
				var f:Object=_mainWindow.flickers[type];
				if(isJoin){
					if(number<0 && f.number<Math.abs(number)){
						f.number=0;
					}else{
						f.number+=number;
					}
				}else{
					f.number=number;
				}
				(f.target as FunctionButton).number=f.number;
				if(f.number>0){
					Main.addFlickerQueue(type,f.icon,f.title+'('+number+')');
				}else{
					Main.removeFlickerQueue(type);
				}
			}
			
			[Bindable]
			public var servday:String;
			[Bindable]
			public var nickname:String;
			[Bindable]
			public var prevlogtime:String;
			
			public static function set user(value:Object):void{
				_mainWindow.prevlogtime=value.prevlogtime;
			}
			
			public static function set profile(value:Object):void{
				_mainWindow.nickname=value.nickname;
				
			}
			
			public static function set setting(value:Object):void{
				_mainWindow.servday=value.servday;
			}
			
			protected function fbUser_clickHandler(event:MouseEvent):void
			{
				Loading.show(fbUser);
				RemoteProxy.bind('Console.User.State.Succeed',function(request:XML):void{
					Loading.hide(fbUser);
					with(UserWindow.userWindow){
						open(true);
						nativeWindow.activate();
						nativeWindow.restore();
						nativeWindow.orderToFront();
						center();
					}
				});
				RemoteProxy.bind('Console.User.State.Failed',function(request:XML):void{
					ShowDialog(request.text(),false,function():void{
						Loading.hide(fbUser);
					});
				});
				RemoteProxy.send('Console.User.State',{});
			}
			
			protected function fbService_clickHandler(event:MouseEvent):void
			{
				Loading.show(fbService);
				RemoteProxy.bind('Console.Service.State.Succeed',function(request:XML):void{
					Loading.hide(fbService);
					with(ServiceWindow.serverWindow){
						open(true);
						nativeWindow.activate();
						nativeWindow.restore();
						nativeWindow.orderToFront();
						center();
					}
				});
				RemoteProxy.bind('Console.Service.State.Failed',function(request:XML):void{
					ShowDialog(request.text(),false,function():void{
						Loading.hide(fbService);
					});
				});
				RemoteProxy.send('Console.Service.State',{});
			}
			
			protected function fbCount_clickHandler(event:MouseEvent):void
			{
				Loading.show(fbCount);
				RemoteProxy.bind('Console.Count.State.Succeed',function(request:XML):void{
					Loading.hide(fbCount);
					with(CountWindow.countWindow){
						open(true);
						nativeWindow.activate();
						nativeWindow.restore();
						nativeWindow.orderToFront();
						center();
					}
				});
				RemoteProxy.bind('Console.Count.State.Failed',function(request:XML):void{
					ShowDialog(request.text(),false,function():void{
						Loading.hide(fbCount);
					});
				});
				RemoteProxy.send('Console.Count.State',{});
			}
			
			protected function fbUserGroup_clickHandler(event:MouseEvent):void
			{
				Loading.show(fbUserGroup);
				RemoteProxy.bind('Console.UserGroup.State.Succeed',function(request:XML):void{
					Loading.hide(fbUserGroup);
					with(UserGroupWindow.userGroupWindow){
						open(true);
						nativeWindow.activate();
						nativeWindow.restore();
						nativeWindow.orderToFront();
						center();
					}
				});
				RemoteProxy.bind('Console.UserGroup.State.Failed',function(request:XML):void{
					ShowDialog(request.text(),false,function():void{
						Loading.hide(fbUserGroup);
					});
				});
				RemoteProxy.send('Console.UserGroup.State',{});
			}

			protected function fbServGroup_clickHandler(event:MouseEvent):void
			{
				Loading.show(fbServGroup);
				RemoteProxy.bind('Console.UserGroup.State.Succeed',function(request:XML):void{
					Loading.hide(fbServGroup);
					with(ServGroupWindow.servGroupWindow){
						open(true);
						nativeWindow.activate();
						nativeWindow.restore();
						nativeWindow.orderToFront();
						center();
					}
				});
				RemoteProxy.bind('Console.UserGroup.State.Failed',function(request:XML):void{
					ShowDialog(request.text(),false,function():void{
						Loading.hide(fbServGroup);
					});
				});
				RemoteProxy.send('Console.UserGroup.State',{});
			}
		]]>
	</fx:Script>
	<s:BorderContainer width="100%" height="100%" backgroundAlpha="0.5" borderColor="#DDDDDD"
					   chromeColor="#DDDDDD">
		<s:layout>
			<s:VerticalLayout gap="10" paddingBottom="15" paddingLeft="15" paddingRight="15"
							  paddingTop="15"/>
		</s:layout>
		<s:Label color="#b60002" fontFamily="微软雅黑" fontSize="16" fontWeight="bold"
				 text="欢迎您，{nickname}，您上一次登录时间是：{prevlogtime}。" textDecoration="none"
				 verticalAlign="middle"/>
		<s:HGroup width="100%" height="40" gap="10">
			<s:BorderContainer width="100%" height="100%" backgroundImage="{Icons.Search}"
							   backgroundImageFillMode="clip" borderColor="#CA0204"
							   cornerRadius="10">
				<s:layout>
					<s:HorizontalLayout gap="0" paddingLeft="40"/>
				</s:layout>
				<s:TextInput x="60" y="10" width="100%" height="100%" borderVisible="false"
							 contentBackgroundAlpha="0.0" fontFamily="微软雅黑" fontSize="20"
							 fontStyle="normal" fontWeight="bold" paddingBottom="0" paddingLeft="0"
							 paddingRight="5" paddingTop="0" prompt="搜索你需要的内容"/>
			</s:BorderContainer>
			<component:LabelBorder width="160" height="100%" backgroundAlpha="1.0"
								   backgroundColor="#B60003" borderColor="#960003" buttonMode="true"
								   color="#FFFFFF" cornerRadius="10" fontFamily="微软雅黑" fontSize="20"
								   fontWeight="bold" text="点击搜索" textAlign="center"
								   useHandCursor="true" verticalAlign="middle"/>
		</s:HGroup>
		<s:HGroup width="100%" height="80" gap="10">
			<component4:FunctionButton id="fbUser" width="100%" label="用户管理"
									   click="fbUser_clickHandler(event)" icon="{Icons.User}"
									   toolTip="用户权限管理"/>
			<component4:FunctionButton id="fbService" width="100%" label="服务信息"
									   click="fbService_clickHandler(event)" icon="{Icons.Service}"
									   toolTip="服务端相关信息"/>
			<component4:FunctionButton id="fbCount" width="100%" label="信息统计"
									   click="fbCount_clickHandler(event)"
									   icon="{Icons.Count}" toolTip="服务器相关功能的数据统计"/>
		</s:HGroup>
		<s:HGroup width="100%" height="80" gap="10">
			<component4:FunctionButton id="fbUserGroup" width="100%" label="用户组管理"
									   click="fbUserGroup_clickHandler(event)" icon="{Icons.UserGroup}"/>
			<component4:FunctionButton id="fbServGroup" width="100%" label="客户分组管理"
									   click="fbServGroup_clickHandler(event)" icon="{Icons.ServGroup}"/>
		</s:HGroup>
	</s:BorderContainer>
	<s:HGroup width="100%">
		<s:HGroup width="100%" color="#B60001" contentBackgroundColor="#FFFFFF" gap="0">
			<s:Label fontFamily="宋体" fontSize="14" fontWeight="bold" text="蓝筹科技"
					 textDecoration="underline" verticalAlign="top"/>
			<s:Label color="#999999" fontFamily="宋体" fontSize="14" fontWeight="bold" text="·"
					 textDecoration="none" verticalAlign="top"/>
			<s:Label buttonMode="true"
					 click="navigateToURL(new URLRequest('http://www.fenxihui.com/'),'_blank')"
					 fontFamily="宋体" fontSize="14" fontWeight="bold" text="分析会"
					 textDecoration="underline" useHandCursor="true" verticalAlign="top"/>
			<s:Label color="#999999" fontFamily="宋体" fontSize="14" fontWeight="bold" text="·"
					 textDecoration="none" verticalAlign="top"/>
			<s:Label color="#333333" fontFamily="宋体" fontSize="14" fontWeight="bold" text="版权所有"
					 textDecoration="none" verticalAlign="top"/>
		</s:HGroup>
		<s:Label color="#C90000" fontFamily="宋体" fontSize="14" fontWeight="bold" text="股市有风险，操作请谨慎"
				 textDecoration="none" verticalAlign="top"/>
	</s:HGroup>
</component:Window>
